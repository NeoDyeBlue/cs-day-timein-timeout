import Head from "next/head";
import Wave from "react-wavify";
import { FormikProvider, Form, useFormik } from "formik";
import AuthCode from "react-auth-code-input";
import { useRouter } from "next/router";
import Image from "next/image";
import { useState, useEffect } from "react";
import useStudentStore from "@/stores/useStudentStore";
import useSWR from "swr";
import { motion } from "framer-motion";
import { toast } from "react-hot-toast";
import { generatePDF } from "@/utils/pdf-utils";
import { format } from "date-fns";
import Link from "next/link";

export default function Home() {
  const router = useRouter();
  const [atendeePrecentage, setAtendeePercentage] = useState(0);
  const { setStudentData } = useStudentStore();

  const { data: counts } = useSWR("/api/students/count", {
    revalidateOnMount: true,
    revalidateOnFocus: true,
    refreshInterval: 60000,
  });

  useEffect(() => {
    if (counts) {
      setAtendeePercentage(counts?.data?.atendeePercent);
    }
  }, [counts]);

  useEffect(() => {
    setStudentData(null);
  }, [setStudentData]);

  const studentIdFormik = useFormik({
    initialValues: {
      studentId: "",
    },
    onSubmit: handleStudentIdSubmit,
  });

  async function getAllLogs() {
    try {
      const res = await fetch("/api/students");
      const result = await res.json();

      if (result && result.success) {
        generatePDF(
          [
            [
              "ID",
              "First Name",
              "Last Name",
              "Year",
              "Section",
              "Time-in",
              "Time-out",
            ],
          ],
          result.data.map((student) => [
            student?.id,
            student?.firstName,
            student?.lastName,
            student?.year,
            student?.section,
            student?.timeLog?.timeIn
              ? format(new Date(student?.timeLog?.timeIn), "p")
              : "",
            student?.timeLog?.timeOut
              ? format(new Date(student?.timeLog?.timeOut), "p")
              : "",
          ]),
          "CMI\nx\nJOHN PAUL\nZOLETA"
        );
      } else {
        toast.error("Something went wrong");
      }
    } catch (error) {
      console.log(error);
      toast.error("Something went wrong");
    }
  }

  async function handleStudentIdSubmit(values) {
    try {
      if (values.studentId.charAt(2) !== "-") {
        values.studentId =
          values.studentId.substring(0, 2) +
          "-" +
          values.studentId.substring(2);
      }
      const res = await fetch("/api/students", {
        method: "POST",
        body: JSON.stringify(values),
        headers: { "Content-Type": "application/json" },
      });

      const result = await res.json();

      if (result.success) {
        setStudentData(result.data);
        router.push("/actions");
      } else {
        if (result?.error == "StudentError") {
          toast.error(result?.errorMessage);
        } else {
          toast.error("Something went wrong");
        }
      }
    } catch (error) {
      toast.error("Something went wrong");
    }
  }

  return (
    <>
      <Head>
        <title>CMI - Computer Science Day 2022-2023</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="relative h-screen min-h-[620px] w-full bg-[#fbfff1]">
        <motion.div
          initial={{ height: 0 }}
          animate={{ height: `${atendeePrecentage + 3}%` }}
          transition={{ ease: "easeOut", duration: 2 }}
          className="absolute bottom-0 w-full overflow-hidden"
        >
          <Wave
            className="h-full"
            fill="#b4c5e4"
            paused={false}
            options={{
              height: 20,
              amplitude: 20,
              speed: 0.15,
              points: 3,
            }}
          />
        </motion.div>
        <div
          className="container mx-auto flex h-full flex-col items-center gap-4 p-6 lg:grid
        lg:grid-cols-12 lg:py-12"
        >
          <div className="z-50 col-span-full flex flex-col gap-2 lg:col-span-5 lg:self-start">
            <div className="flex items-center justify-center gap-2 lg:justify-start">
              <div className="relative h-[60px] w-[60px] overflow-hidden md:h-[80px] md:w-[80px]">
                <Image
                  src={"/images/cmi.png"}
                  alt="college of mary immaculate logo"
                  fill
                />
              </div>
              <p className="text-lg">x</p>
              <div className="relative h-[60px] w-[60px] overflow-hidden md:h-[80px] md:w-[80px]">
                <Image
                  src={"/images/comics.png"}
                  alt="college of mary immaculate computer society logo"
                  fill
                />
              </div>
            </div>
            <p
              className="text-center font-display text-4xl
          font-black lg:text-left lg:text-7xl"
            >
              Computer Science Day{" "}
              <span className="text-[#3066be]">2022-2023</span>
            </p>
          </div>
          <div
            className="custom-shadow-lg z-50 row-span-2 flex h-full w-full flex-col items-center justify-center gap-4
        self-center rounded-lg bg-white p-4 lg:col-span-6 lg:col-start-7"
          >
            <FormikProvider value={studentIdFormik}>
              <Form className="flex w-full flex-col items-center gap-4">
                <p className="text-center font-display text-2xl font-bold">
                  ðŸ‘‹Welcome!
                </p>
                <p className="text-center">Enter your student ID to continue</p>
                <div className="flex w-full flex-col items-center gap-4">
                  <AuthCode
                    // inputClassName="otp-input"
                    inputClassName="rounded-md border border-gray-400 bg-white w-[40px] h-[40px] md:w-[60px] md:h-[60px] font-body md:text-2xl
                  placeholder-gray-300 focus:outline-none focus:ring-1 focus:ring-[#b4c5e4] flex-shrink-0 text-center font-semibold"
                    containerClassName="flex gap-2 w-full justify-center items-center"
                    onChange={(value) =>
                      studentIdFormik.setFieldValue("studentId", value)
                    }
                    allowedCharacters="numeric"
                    autoFocus
                  />
                </div>
                <button
                  type="submit"
                  disabled={studentIdFormik.values.studentId.length < 6}
                  className="rounded-md bg-[#090c9b] px-6 py-4 text-center font-display font-semibold
                text-white transition hover:scale-105 active:scale-100 disabled:cursor-not-allowed disabled:opacity-50"
                >
                  Login
                </button>
                <p className="mt-4 text-xs">
                  Made with ðŸ’™ by{" "}
                  <Link
                    href="https://github.com/NeoDyeBlue"
                    className="font-display font-medium text-[#3066be] hover:underline"
                  >
                    John Paul Zoleta
                  </Link>
                </p>
              </Form>
            </FormikProvider>
          </div>
          <div
            className="z-50 col-span-6 col-start-1 flex flex-col items-center gap-2
          lg:items-start lg:self-end"
          >
            <p
              className="col-span-full text-center text-4xl lg:col-span-6 lg:text-left
          lg:text-5xl"
            >
              {atendeePrecentage}%
            </p>
            <p className="col-span-full text-center lg:col-span-6 lg:text-left">
              of the CMI CS students has timed-in!{" "}
              <button
                onClick={getAllLogs}
                className="rounded-md bg-green-500 py-[0.1rem] px-2
               font-display text-xs font-semibold text-white"
              >
                Export
              </button>
            </p>
          </div>
        </div>
      </main>
    </>
  );
}
